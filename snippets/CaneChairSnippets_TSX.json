{
    "ReactJS : TSX : Component : Container": {
        "prefix": "ccReactJS_TSX_Component_Container",
        "body": [
            "import * as React from 'react';\r",
            "import { connect } from 'react-redux';\r",
            "import { bindActionCreators, Dispatch } from 'redux';\r",
            "import { withRouter, RouteComponentProps } from 'react-router-dom';\r",
            "import { ${2:__ModelName__}Model } from 'types/modelTypes/${2:__ModelName__}Model';\r",
            "import I${2:__ModelName__}Action from 'actions/interfaces/I${2:__ModelName__}Action';\r",
            "import * as ${2:__ModelName__}Actions from 'actions/${2:__ModelName__}Actions';\r",
            "import StoreStateType from 'types/StateTypes/StoreStateType';\r",
            "\r",
            "class ${1:__ComponentName__} extends React.Component<ThisPropsType, ThisStateType> {\r",
            "  constructor(props: any) {\r",
            "    super(props);\r",
            "    this.state = {\r",
            "      ${2:__ModelName__}Array: this.props.${2:__ModelName__}Array\r",
            "    };\r",
            "  }\r",
            "\r",
            "  componentWillMount() {\r",
            "    //\r",
            "  }\r",
            "\r",
            "  componentDidMount() {\r",
            "    //\r",
            "  }\r",
            "\r",
            "  componentWillReceiveProps(nextProps: StateToPropsType) {\r",
            "    // this.setState({ ${2:__ModelName__}Array: nextProps.${2:__ModelName__}Array });\r",
            "  }\r",
            "\r",
            "  componentDidUpdate() {\r",
            "    //\r",
            "  }\r",
            "\r",
            "  render() {\r",
            "    return (\r",
            "      <div>\r",
            "        ${1:__ComponentName__} works.\r",
            "      </div>\r",
            "    );\r",
            "  }\r",
            "}\r",
            "\r",
            "function mapStateToProps(storeState: StoreStateType): StateToPropsType {\r",
            "  return {\r",
            "    ${2:__ModelName__}Array: storeState.${2:__ModelName__}Array\r",
            "  };\r",
            "}\r",
            "\r",
            "function mapDispatchToProps(dispatch: Dispatch<I${2:__ModelName__}Action>): DispatchToPropsType {\r",
            "  return {\r",
            "    actions: bindActionCreators(${2:__ModelName__}Actions, dispatch)\r",
            "  };\r",
            "}\r",
            "\r",
            "type ThisStateType = {\r",
            "  ${2:__ModelName__}Array: ${2:__ModelName__}Model[]\r",
            "};\r",
            "\r",
            "type StateToPropsType = {\r",
            "  ${2:__ModelName__}Array: ${2:__ModelName__}Model[];\r",
            "};\r",
            "\r",
            "type DispatchToPropsType = {\r",
            "  actions: typeof ${2:__ModelName__}Actions;\r",
            "};\r",
            "\r",
            "type RCProps = RouteComponentProps<{ id: number }>;\r",
            "\r",
            "type OwnProps = {\r",
            "} & RCProps;\r",
            "\r",
            "type ThisPropsType = StateToPropsType & DispatchToPropsType & OwnProps;\r",
            "\r",
            "export default withRouter(connect<StateToPropsType, DispatchToPropsType, OwnProps>(mapStateToProps, mapDispatchToProps)(${1:__ComponentName__}));\r",
            ""
        ],
        "description": "TSX: Create a container component."
    },
    "ReactJS : TSX : ccReactJS_TSX_Component_Presentational": {
        "prefix": "ccReactJS_TSX_Component_Presentational",
        "body": [
            "import * as React from 'react';\r",
            "import { ${2:__ComponentModelName__}Model } from 'types/modelTypes/${2:__ComponentModelName__}Model';\r",
            "\r",
            "type ${1:__ComponentName__}Props = {\r",
            "  ${2:__ComponentModelName__}: ${2:__ComponentModelName__}Model\r",
            "};\r",
            "\r",
            "const ${1:__ComponentName__} = (props: ${1:__ComponentName__}Props) => {\r",
            "  return (\r",
            "    <div>\r",
            "      ${1:__ComponentName__} working.\r",
            "    </div>\r",
            "  );\r",
            "};\r",
            "\r",
            "export default ${1:__ComponentName__};\r",
            ""
        ],
        "description": "TSX: Create a presentational component."
    }
}