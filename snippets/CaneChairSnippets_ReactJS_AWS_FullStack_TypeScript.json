{
	"AWS_FullStack_TypeScript_Index.tsx": {
		"prefix": "ccReactJS_AWS_FullStack_TypeScript_index.tsx",
		"body": [
			"import './index.css';",
			"import '@fontsource/roboto';",
			"",
			"import Amplify from 'aws-amplify';",
			"import React from 'react';",
			"import ReactDOM from 'react-dom';",
			"import { Provider as ReduxProvider } from 'react-redux';",
			"import { BrowserRouter } from 'react-router-dom';",
			"",
			"import App from './App';",
			"import config from './aws-exports';",
			"import { reduxStore } from './Redux/store';",
			"import reportWebVitals from './reportWebVitals';",
			"",
			"Amplify.configure(config);",
			"",
			"require('dotenv').config();",
			"",
			"ReactDOM.render(",
			"\t<ReduxProvider store={reduxStore}>",
			"\t\t<BrowserRouter>",
			"\t\t\t<App />",
			"\t\t</BrowserRouter>",
			"\t</ReduxProvider>,",
			"\tdocument.getElementById('root'),",
			");",
			"",
			"reportWebVitals();",
			""
		],
		"description": "Create index.tsx file"
	},
	"AWS_FullStack_TypeScript_Redux_Slice": {
		"prefix": "ccReactJS_AWS_ReduxSlice_TypeScript",
		"body": [
			"import { useFormik } from 'formik';",
			"import React, { useEffect } from 'react';",
			"import * as Yup from 'yup';",
			"",
			"import { Button, TextField } from '@material-ui/core';",
			"",
			"import { useAppDispatch, useAppSelector } from '../Redux/hooks';",
			"import {",
			"\tTable,",
			"\tTableBody,",
			"\tTableCell,",
			"\tTableContainer,",
			"\tTableHead,",
			"\tTableRow,",
			"} from '../styledComponents/Table';",
			"import {",
			"\taddNew${1:__SliceName__},",
			"\tdelete${1:__SliceName__},",
			"\tfetch${1:__SliceName__}List,",
			"\tupdate${1:__SliceName__},",
			"} from './${1/^(.)(.*)$/${1:/downcase}${2}/}Slice';",
			"",
			"interface ${1:__SliceName__}ManagementProps {}",
			"",
			"export const ${1:__SliceName__}Management = (props: ${1:__SliceName__}ManagementProps) => {",
			"\tconst [enabledRow, setEnabledRow] = React.useState<any>();",
			"\tconst ${1/^(.)(.*)$/${1:/downcase}${2}/}List = useAppSelector((state) => state.${1/^(.)(.*)$/${1:/downcase}${2}/}.${1/^(.)(.*)$/${1:/downcase}${2}/}List);",
			"\tconst dispatch = useAppDispatch();",
			"",
			"\tuseEffect(() => {",
			"\t\tif (${1/^(.)(.*)$/${1:/downcase}${2}/}List.length === 0) {",
			"\t\t\tdispatch(fetch${1:__SliceName__}List());",
			"\t\t}",
			"\t}, []);",
			"",
			"\tconst initialValues = {",
			"\t\tname: '',",
			"\t\tdescription: '',",
			"\t};",
			"\tconst validationSchema = Yup.object({",
			"\t\tname: Yup.string().required('required'),",
			"\t});",
			"\tconst onSubmit = async (values: any) => {",
			"\t\tdispatch(addNew${1:__SliceName__}(values));",
			"\t\tformik.resetForm();",
			"\t};",
			"",
			"\tconst formik = useFormik({",
			"\t\tinitialValues,",
			"\t\tvalidationSchema,",
			"\t\tonSubmit,",
			"\t});",
			"",
			"\tlet initialValues_modifyForm = {",
			"\t\tname: '',",
			"\t\tdescription: '',",
			"\t};",
			"\tconst validationSchema_modifyForm = Yup.object({",
			"\t\tname: Yup.string().required('required'),",
			"\t});",
			"\tconst onSubmit_modifyForm = async (values: any) => {",
			"\t\tconst input = {",
			"\t\t\tid: values.id,",
			"\t\t\tname: values.name,",
			"\t\t\tdescription: values.description,",
			"\t\t};",
			"\t\tdispatch(update${1:__SliceName__}(input));",
			"\t\tsetEnabledRow(undefined);",
			"\t};",
			"",
			"\tconst formik_modifyForm = useFormik({",
			"\t\tinitialValues: initialValues_modifyForm,",
			"\t\tvalidationSchema: validationSchema_modifyForm,",
			"\t\tonSubmit: onSubmit_modifyForm,",
			"\t});",
			"",
			"\tconst onButtonClick_update = (row: any) => {",
			"\t\tsetEnabledRow(row);",
			"\t\tformik_modifyForm.setValues(row);",
			"\t};",
			"",
			"\tconst onButtonClick_delete = (id: string) => {",
			"\t\tdispatch(delete${1:__SliceName__}(id));",
			"\t};",
			"",
			"\tconst onButtonClick_cancel = () => {",
			"\t\tsetEnabledRow(undefined);",
			"\t};",
			"",
			"\treturn (",
			"\t\t<>",
			"\t\t\t<h1>${1:__SliceName__}Management</h1>",
			"\t\t\t<form onSubmit={formik.handleSubmit}>",
			"\t\t\t\t<TextField",
			"\t\t\t\t\tid='name'",
			"\t\t\t\t\tname='name'",
			"\t\t\t\t\tlabel='Name'",
			"\t\t\t\t\tvalue={formik.values.name}",
			"\t\t\t\t\tonChange={formik.handleChange}",
			"\t\t\t\t\terror={formik.touched.name && Boolean(formik.errors.name)}",
			"\t\t\t\t\thelperText={formik.touched.name && formik.errors.name}></TextField>",
			"\t\t\t\t<TextField",
			"\t\t\t\t\tid='description'",
			"\t\t\t\t\tname='description'",
			"\t\t\t\t\tlabel='Description'",
			"\t\t\t\t\tvalue={formik.values.description}",
			"\t\t\t\t\tonChange={formik.handleChange}",
			"\t\t\t\t\terror={",
			"\t\t\t\t\t\tformik.touched.description && Boolean(formik.errors.description)",
			"\t\t\t\t\t}",
			"\t\t\t\t\thelperText={",
			"\t\t\t\t\t\tformik.touched.description && formik.errors.description",
			"\t\t\t\t\t}></TextField>",
			"",
			"\t\t\t\t<Button type='submit' color='primary' variant='contained'>",
			"\t\t\t\t\tAdd",
			"\t\t\t\t</Button>",
			"\t\t\t</form>",
			"\t\t\t<h2>${1:__SliceName__}Management List（{`${${1/^(.)(.*)$/${1:/downcase}${2}/}List.length}`}）</h2>",
			"\t\t\t<TableContainer>",
			"\t\t\t\t<Table>",
			"\t\t\t\t\t<TableHead>",
			"\t\t\t\t\t\t<TableRow>",
			"\t\t\t\t\t\t\t<TableCell>Name</TableCell>",
			"\t\t\t\t\t\t\t<TableCell>Description</TableCell>",
			"\t\t\t\t\t\t\t<TableCell>Created At</TableCell>",
			"\t\t\t\t\t\t\t<TableCell>Edit</TableCell>",
			"\t\t\t\t\t\t</TableRow>",
			"\t\t\t\t\t</TableHead>",
			"\t\t\t\t\t<TableBody>",
			"\t\t\t\t\t\t{${1/^(.)(.*)$/${1:/downcase}${2}/}List.map((item) => {",
			"\t\t\t\t\t\t\tif (enabledRow !== item) {",
			"\t\t\t\t\t\t\t\treturn (",
			"\t\t\t\t\t\t\t\t\t<TableRow key={item.id}>",
			"\t\t\t\t\t\t\t\t\t\t<TableCell>{item.name}</TableCell>",
			"\t\t\t\t\t\t\t\t\t\t<TableCell>{item.description}</TableCell>",
			"\t\t\t\t\t\t\t\t\t\t<TableCell>{item.createdAt}</TableCell>",
			"\t\t\t\t\t\t\t\t\t\t<TableCell>",
			"\t\t\t\t\t\t\t\t\t\t\t<Button",
			"\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'",
			"\t\t\t\t\t\t\t\t\t\t\t\tvariant='contained'",
			"\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onButtonClick_update(item)}>",
			"\t\t\t\t\t\t\t\t\t\t\t\tModify",
			"\t\t\t\t\t\t\t\t\t\t\t</Button>",
			"\t\t\t\t\t\t\t\t\t\t\t<Button",
			"\t\t\t\t\t\t\t\t\t\t\t\tcolor='secondary'",
			"\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'",
			"\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tonButtonClick_delete(item.id);",
			"\t\t\t\t\t\t\t\t\t\t\t\t}}>",
			"\t\t\t\t\t\t\t\t\t\t\t\tDelete",
			"\t\t\t\t\t\t\t\t\t\t\t</Button>",
			"\t\t\t\t\t\t\t\t\t\t</TableCell>",
			"\t\t\t\t\t\t\t\t\t</TableRow>",
			"\t\t\t\t\t\t\t\t);",
			"\t\t\t\t\t\t\t} else {",
			"\t\t\t\t\t\t\t\treturn (",
			"\t\t\t\t\t\t\t\t\t<form onSubmit={formik_modifyForm.handleSubmit} key={item.id}>",
			"\t\t\t\t\t\t\t\t\t\t<TableRow>",
			"\t\t\t\t\t\t\t\t\t\t\t<TableCell>",
			"\t\t\t\t\t\t\t\t\t\t\t\t<TextField",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tid='name'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tname='name'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik_modifyForm.values.name}",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik_modifyForm.handleChange}",
			"\t\t\t\t\t\t\t\t\t\t\t\t\terror={",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tformik_modifyForm.touched.name &&",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tBoolean(formik_modifyForm.errors.name)",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t}",
			"\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tformik_modifyForm.touched.name &&",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tformik_modifyForm.errors.name",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t}></TextField>",
			"\t\t\t\t\t\t\t\t\t\t\t</TableCell>",
			"\t\t\t\t\t\t\t\t\t\t\t<TableCell>",
			"\t\t\t\t\t\t\t\t\t\t\t\t<TextField",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tid='description'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tname='description'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Description'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik_modifyForm.values.description}",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik_modifyForm.handleChange}",
			"\t\t\t\t\t\t\t\t\t\t\t\t\terror={",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tformik_modifyForm.touched.description &&",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tBoolean(formik_modifyForm.errors.description)",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t}",
			"\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tformik_modifyForm.touched.description &&",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tformik_modifyForm.errors.description",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t}></TextField>",
			"\t\t\t\t\t\t\t\t\t\t\t</TableCell>",
			"\t\t\t\t\t\t\t\t\t\t\t<TableCell>{item.createdAt}</TableCell>",
			"\t\t\t\t\t\t\t\t\t\t\t<TableCell>",
			"\t\t\t\t\t\t\t\t\t\t\t\t<Button",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='contained'>",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tSave",
			"\t\t\t\t\t\t\t\t\t\t\t\t</Button>",
			"\t\t\t\t\t\t\t\t\t\t\t\t<Button",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='secondary'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={onButtonClick_cancel}>",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tCancel",
			"\t\t\t\t\t\t\t\t\t\t\t\t</Button>",
			"\t\t\t\t\t\t\t\t\t\t\t</TableCell>",
			"\t\t\t\t\t\t\t\t\t\t</TableRow>",
			"\t\t\t\t\t\t\t\t\t</form>",
			"\t\t\t\t\t\t\t\t);",
			"\t\t\t\t\t\t\t}",
			"\t\t\t\t\t\t})}",
			"\t\t\t\t\t</TableBody>",
			"\t\t\t\t</Table>",
			"\t\t\t</TableContainer>",
			"\t\t</>",
			"\t);",
			"};",
			""
		],
		"description": "Create a redux slice file"
	}
}
