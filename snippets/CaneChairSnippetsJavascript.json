{
	"Print to console": {
		"prefix": "cclog",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"if statement": {
		"prefix": "ccif",
		"body": [
			"if (${1:__condition__}) {",
			"${2:__statement__}",
			"}"
		],
		"description": "example: if(condition) { statement }"
	},
	"if statement": {
		"prefix": "ccForEntityInModel",
		"body": [
			"for (let ${1:__entityname__} in ${2:__modelName__}) {",
			"	${3:__statement__}",
			"}"
		],
		"description": "example: if(condition) { statement }"
	},
	"anonymous function": {
		"prefix": "ccAnonymousFunction",
		"body": [
			"(${1:__parameter__})=>{",
			"${2:__statement__}",
			"}"
		],
		"description": "example: (parameter)=>{ statement}"
	},
	"require": {
		"prefix": "ccStandardRequire",
		"body": [
			"${2:__moduleName__}=require('${1:__modulePath__}')"
		],
		"description": ""
	},
	"standard function": {
		"prefix": "ccStandardFunction",
		"body": [
			"function(${1:__parameter__}){",
			"	${2:__statement__}",
			"};"
		],
		"description": ""
	},
	"exports function": {
		"prefix": "ccExportsFunction",
		"body": [
			"exports.${1:__functionName__} = function(${2:req}, ${3:res}, ${4:}){",
			"	${2:__statement__}",
			"};"
		],
		"description": ""
	},
	"mongoose: new Schema": {
		"prefix": "ccNewSchema-mongoose",
		"body": [
			"${1:__schemaName__} = new Schema({",
			"	${2:__statement__}",
			"});"
		],
		"description": ""
	},
	"mongoose: property": {
		"prefix": "ccprop-mongoose",
		"body": [
			"${1:__propertyname__}: {",
			"	type: ${2:__dataType__},",
			"	default: ${3:__defaultValue__}"
			"}"
		],
		"description": ""
	}
}