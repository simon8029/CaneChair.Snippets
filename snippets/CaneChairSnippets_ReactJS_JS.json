{
	"ReactJS : Duck : NewDuck": {
		"prefix": "ccReactJS_Duck_NewDuck",
		"body": [
			"export const types = {};",
			"",
			"const DEFAULT_STATE = {};",
			"",
			"export function reducer(state = DEFAULT_STATE, action) {",
			"\tswitch (action.type) {",
			"\t\tdefault:",
			"\t\t\treturn state;",
			"\t}",
			"}",
			"",
			"export const actions = {};",
			""
		],
		"description": "Init a Duck file."
	},
	"ReactJS : JS : Component : Class": {
		"prefix": "ccReactJS_JS_Component_Class",
		"body": [
			"import React from \"react\";",
			"",
			"class ${1:__ClassName__} extends React.Component {",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<div>",
			"\t\t\t\t${1:__ClassName__} Works!",
			"\t\t\t</div>",
			"\t\t);",
			"\t}",
			"}",
			"",
			"export default ${1:__ClassName__};",
			""
		],
		"description": "Create React Standard Component."
	},
	"ReactJS : JS : Component : Container": {
		"prefix": "ccReactJS_JS_Component_Container",
		"body": [
			"import React from 'react';",
			"import { connect } from 'react-redux';",
			"",
			"class ${1:__ComponentName__} extends React.Component {",
			"\tconstructor(props) {",
			"\t\tsuper(props);",
			"\t\tthis.state = {};",
			"\t}",
			"",
			"\trender() {",
			"\t\treturn <div>${1:__ComponentName__} Works!</div>;",
			"\t}",
			"}",
			"",
			"const mapStateToProps = store => {};",
			"const mapDispatchToProps = {};",
			"",
			"export default connect(",
			"\tmapStateToProps,",
			"\tmapDispatchToProps",
			")(${1:__ComponentName__});",
			""
		],
		"description": "Create React Container Component"
	},
	"ReactJS : JS : NewAction": {
		"prefix": "ccReactJS_JS_NewAction",
		"body": [
			"import axios from 'axios';",
			"import * as ${1:__ComponentName__}ActionTypes from './${1:__ComponentName__}ActionTypes';",
			"import { BaseUrl } from '../config/common';",
			"",
			"export function getAll${1:__ComponentName__}sStart(new${1:__ComponentName__}) {",
			"\treturn dispatch => {",
			"\t\taxios.get(`\\${BaseUrl}/${1:__ComponentName__}s`).then(",
			"\t\t\tres => {",
			"\t\t\t\tif (res.status === 200) {",
			"\t\t\t\t\tdispatch(getAll${1:__ComponentName__}sSuccess(res.data));",
			"\t\t\t\t}",
			"\t\t\t},",
			"\t\t\terr => {",
			"\t\t\t\tdispatch(getAll${1:__ComponentName__}sFailure(err));",
			"\t\t\t}",
			"\t\t);",
			"\t};",
			"}",
			"",
			"const getAll${1:__ComponentName__}sSuccess = data => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_SUCCESS,",
			"\t\tpayload: data",
			"\t};",
			"};",
			"const getAll${1:__ComponentName__}sFailure = error => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_FAILURE,",
			"\t\tpayload: error",
			"\t};",
			"};",
			"",
			"export function addNew${1:__ComponentName__}Start(new${1:__ComponentName__}) {",
			"\treturn dispatch => {",
			"\t\taxios.post(`\\${BaseUrl}/${1:__ComponentName__}s`, new${1:__ComponentName__}).then(",
			"\t\t\tres => {",
			"\t\t\t\tif (res.status === 201) {",
			"\t\t\t\t\tdispatch(addNew${1:__ComponentName__}Success(res.data));",
			"\t\t\t\t}",
			"\t\t\t},",
			"\t\t\terr => {",
			"\t\t\t\tdispatch(addNew${1:__ComponentName__}Failure(err));",
			"\t\t\t}",
			"\t\t);",
			"\t};",
			"}",
			"",
			"const addNew${1:__ComponentName__}Success = data => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.ADD_NEW_${2:__CapitalComponentName__}_SUCCESS,",
			"\t\tpayload: data",
			"\t};",
			"};",
			"const addNew${1:__ComponentName__}Failure = error => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.ADD_NEW_${2:__CapitalComponentName__}_FAILURE,",
			"\t\tpayload: error",
			"\t};",
			"};",
			"",
			"export function delete${1:__ComponentName__}Start(id) {",
			"\treturn dispatch => {",
			"\t\taxios.delete(`\\${BaseUrl}/${1:__ComponentName__}s/\\${id}/`).then(",
			"\t\t\tres => {",
			"\t\t\t\tif (res.status === 200) {",
			"\t\t\t\t\tdispatch(delete${1:__ComponentName__}Success(id));",
			"\t\t\t\t}",
			"\t\t\t},",
			"\t\t\terr => {",
			"\t\t\t\tdispatch(delete${1:__ComponentName__}Failure(err));",
			"\t\t\t}",
			"\t\t);",
			"\t};",
			"}",
			"",
			"const delete${1:__ComponentName__}Success = data => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.DELETE_${2:__CapitalComponentName__}_SUCCESS,",
			"\t\tpayload: data",
			"\t};",
			"};",
			"const delete${1:__ComponentName__}Failure = error => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.DELETE_${2:__CapitalComponentName__}_FAILURE,",
			"\t\tpayload: error",
			"\t};",
			"};",
			"",
			"export function update${1:__ComponentName__}Start(id, new${1:__ComponentName__}) {",
			"\treturn dispatch => {",
			"\t\taxios.put(`\\${BaseUrl}/${1:__ComponentName__}s/\\${id}/`, new${1:__ComponentName__}).then(",
			"\t\t\tres => {",
			"\t\t\t\tif (res.status === 200) {",
			"\t\t\t\t\tdispatch(update${1:__ComponentName__}Success(res.data));",
			"\t\t\t\t}",
			"\t\t\t},",
			"\t\t\terr => {",
			"\t\t\t\tdispatch(update${1:__ComponentName__}Failure(err));",
			"\t\t\t}",
			"\t\t);",
			"\t};",
			"}",
			"",
			"const update${1:__ComponentName__}Success = new${1:__ComponentName__} => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.UPDATE_${2:__CapitalComponentName__}_SUCCESS,",
			"\t\tpayload: new${1:__ComponentName__}",
			"\t};",
			"};",
			"const update${1:__ComponentName__}Failure = error => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.UPDATE_${2:__CapitalComponentName__}_FAILURE,",
			"\t\tpayload: error",
			"\t};",
			"};",
			"",
			"export default {",
			"\tgetAll${1:__ComponentName__}sStart,",
			"\taddNew${1:__ComponentName__}Start,",
			"\tdelete${1:__ComponentName__}Start,",
			"\tupdate${1:__ComponentName__}Start",
			"};",
			""
		],
		"description": "Create a New Action."
	},
	"ReactJS : JS : RootIndexFile": {
		"prefix": "ccReactJS_JS_RootIndexFile",
		"body": [
			"import registerServiceWorker from './registerServiceWorker';",
			"",
			"import React from 'react';",
			"import ReactDOM from 'react-dom';",
			"import { Provider } from 'react-redux';",
			"import store from './store';",
			"import App from './App';",
			"",
			"ReactDOM.render(",
			"\t<Provider>",
			"\t\t<App />",
			"\t</Provider>,",
			"\tdocument.getElementById('root')",
			");",
			"",
			"// if (module.hot) {",
			"// \tmodule.hot.accept('./App', () => {",
			"// \t\tconst NextApp = require('./App').default;",
			"// \t\tReactDOM.render(",
			"// \t\t\t<Provider store={store}>",
			"// \t\t\t\t<NextApp />",
			"// \t\t\t</Provider>,",
			"// \t\t\tdocument.getElementById('root')",
			"// \t\t);",
			"// \t});",
			"// ",
			"// \tmodule.hot.accept('./reducers', () => {",
			"// \t\tconst nextRootReducer = require('./reducers').default;",
			"// \t\tstore.replaceReducer(nextRootReducer);",
			"// \t});",
			"// }",
			"",
			"registerServiceWorker();"
		],
		"description": "Create the root index."
	},
	"ReactJS : JS : Store": {
		"prefix": "ccReactJS_JS_Store",
		"body": [
			"import { createStore, applyMiddleware } from 'redux';",
			"import thunk from 'redux-thunk';",
			"import { composeWithDevTools } from 'redux-devtools-extension';",
			"import rootReducer from './rootReducer';",
			"",
			"const store = createStore(",
			"\trootReducer,",
			"\tcomposeWithDevTools(applyMiddleware(thunk))",
			");",
			"",
			"export default store;",
			""
		],
		"description": "Create the store."
	},
	"ReactJS : JS : RootReducer": {
		"prefix": "ccReactJS_JS_RootReducer",
		"body": [
			"import { combineReducers } from 'redux';",
			"import { routerReducer } from 'react-router-redux';",
			"import { ${1:__ReducerName__}Reducer } from './${1:__ReducerName__}Reducer';",
			"",
			"const rootReducer = combineReducers({",
			"\trouterReducer,",
			"\t${1:__ReducerName__}s: ${1:__ReducerName__}Reducer",
			"});",
			"",
			"export default rootReducer;",
			""
		],
		"description": "Create root reducer"
	},
	"ReactJS : JS : NewReducer": {
		"prefix": "ccReactJS_JS_NewReducer",
		"body": [
			"import * as ${1:__ComponentName__}ActionTypes from './${1:__ComponentName__}ActionTypes';",
			"",
			"const initialState = {",
			"\t${1:__ComponentName__}s: []",
			"};",
			"",
			"export default function ${1:__ComponentName__}(state = initialState, action) {",
			"\tswitch (action.type) {",
			"\t\tcase ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_START: {",
			"\t\t\treturn {",
			"\t\t\t\t...state",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_SUCCESS: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\t${1:__ComponentName__}s: action.payload",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_FAILURE: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\terror: action.payload",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.ADD_NEW_${2:__CapitalComponentName__}_SUCCESS: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\t${1:__ComponentName__}s: [...state.${1:__ComponentName__}s, action.payload]",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.ADD_NEW_${2:__CapitalComponentName__}_FAILURE: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\terror: action.payload",
			"\t\t\t};",
			"\t\t}",
			"\t\tcase ${1:__ComponentName__}ActionTypes.DELETE_${2:__CapitalComponentName__}_SUCCESS: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\t${1:__ComponentName__}s: [",
			"\t\t\t\t\t...state.${1:__ComponentName__}s.filter(item => item.id !== action.payload)",
			"\t\t\t\t]",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.DELETE_${2:__CapitalComponentName__}_FAILURE: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\terror: action.payload",
			"\t\t\t};",
			"\t\t}",
			"\t\tcase ${1:__ComponentName__}ActionTypes.UPDATE_${2:__CapitalComponentName__}_SUCCESS: {",
			"\t\t\tconst ${1:__ComponentName__}s = state.${1:__ComponentName__}s.map(item => {",
			"\t\t\t\tif (item.id === action.payload.id) {",
			"\t\t\t\t\treturn action.payload;",
			"\t\t\t\t}",
			"\t\t\t\treturn item;",
			"\t\t\t});",
			"",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\t${1:__ComponentName__}s",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.UPDATE_${2:__CapitalComponentName__}_FAILURE: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\terror: action.payload",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tdefault:",
			"\t\t\treturn state;",
			"\t}",
			"}",
			""
		],
		"description": "Create a new reducer."
	},
	"ReactJS : JS : ActionTypes": {
		"prefix": "ccReactJS_JS_ActionTypes",
		"body": [
			"export const GET_ALL_${1:__CapitalComponentName__}S_START = 'GET_ALL_${1:__CapitalComponentName__}S_START';",
			"export const GET_ALL_${1:__CapitalComponentName__}S_SUCCESS = 'GET_ALL_${1:__CapitalComponentName__}S_SUCCESS';",
			"export const GET_ALL_${1:__CapitalComponentName__}S_FAILURE = 'GET_ALL_${1:__CapitalComponentName__}S_FAILURE';",
			"export const ADD_NEW_${1:__CapitalComponentName__}_START = 'ADD_NEW_${1:__CapitalComponentName__}_START';",
			"export const ADD_NEW_${1:__CapitalComponentName__}_SUCCESS = 'ADD_NEW_${1:__CapitalComponentName__}_SUCCESS';",
			"export const ADD_NEW_${1:__CapitalComponentName__}_FAILURE = 'ADD_NEW_${1:__CapitalComponentName__}_FAILURE';",
			"export const DELETE_${1:__CapitalComponentName__}_START = 'DELETE_${1:__CapitalComponentName__}_START';",
			"export const DELETE_${1:__CapitalComponentName__}_SUCCESS = 'DELETE_${1:__CapitalComponentName__}_SUCCESS';",
			"export const DELETE_${1:__CapitalComponentName__}_FAILURE = 'DELETE_${1:__CapitalComponentName__}_FAILURE';",
			"export const UPDATE_${1:__CapitalComponentName__}_START = 'UPDATE_${1:__CapitalComponentName__}_START';",
			"export const UPDATE_${1:__CapitalComponentName__}_SUCCESS = 'UPDATE_${1:__CapitalComponentName__}_SUCCESS';",
			"export const UPDATE_${1:__CapitalComponentName__}_FAILURE = 'UPDATE_${1:__CapitalComponentName__}_FAILURE';",
			""
		],
		"description": "Create Action Types."
	},
	"ReactJS : JS : NewRoute": {
		"prefix": "ccReactJS_JS_NewRoute",
		"body": [
			"<Route path=\"${1:__Path__}\" component={${2:__ComponentName__}} />"
		],
		"description": "Create New React Route."
	}
}
