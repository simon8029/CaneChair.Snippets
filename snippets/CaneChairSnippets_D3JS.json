{
	"D3JS : xScale : Linear": {
		"prefix": "ccD3_xScale_linear",
		"body": [
			"const xAccessor = d => d.${1:__propertyName__};",
			"const xScale = d3.scaleLinear()",
			"  .domain(d3.extent(dataset, xAccessor)) ",
			"  .range([0, dimensions.boundedWidth",
			"])"
		],
		"description": "Create Linear xScale"
	},
	"D3JS : yScale : Linear": {
		"prefix": "ccD3_yScale_linear",
		"body": [
			"const yAccessor = d => d.${1:__propertyName__};",
			"const yScale = d3.scaleLinear()",
			"  .domain(d3.extent(dataset, yAccessor)) ",
			"  .range([dimensions.boundedHeight, 0]),",
			"  .nice();"
		],
		"description": "Create Linear xScale"
	},
	"D3JS : xScale : Date": {
		"prefix": "ccD3_xScale_date",
		"body": [
			"  const dateParser = d3.timeParse('%Y-%m-%d');",
			"  const xAccessor = d => dateParser(d.date);",
			"  const xScale = d3",
			"    .scaleTime()",
			"    .domain(d3.extent(dataset, xAccessor))",
			"    .range([0, dimensions.boundedWidth]);"
		],
		"description": "Create xScale by date"
	},
	"D3JS : Axis": {
		"prefix": "ccD3_axis",
		"body": [
			"const xAxisGenerator = d3.axisBottom().scale(xScale);",
			"const xAxis = bounds",
			"  .append('g')",
			"  .call(xAxisGenerator)",
			"  .style('transform', `translateY(${dimensions.boundedHeight",
			"    }px)`);",
			"",
			"const xAxisLabel = xAxis",
			"  .append('text')",
			"  .attr('x', dimensions.boundedWidth / 2)",
			"  .attr('y', dimensions.margin.bottom - 10)",
			"  .attr('fill', 'black')",
			"  .style('font-size', '1.4em')",
			"  .html('xAxis Label');",
			"",
			"const yAxisGenerator = d3",
			"  .axisLeft()",
			"  .scale(yScale)",
			"  .ticks(10);",
			"const yAxis = bounds.append('g').call(yAxisGenerator);",
			"const yAxisLabel = yAxis",
			"  .append('text')",
			"  .attr('x', -dimensions.boundedHeight / 2)",
			"  .attr('y', -dimensions.margin.left + 10)",
			"  .attr('fill', 'black')",
			"  .style('font-size', '1.4em')",
			"  .style('transform', 'rotate(-90deg')",
			"  .style('text-anchor', 'middle')",
			"  .text('yAxis Label');"
		],
		"description": "Create Axes"
	},

	"D3JS : dimensions": {
		"prefix": "ccD3_dimensions",
		"body": [
			"  const dimensions = {",
			"  width: window.innerWidth * 0.9,",
			"  height: 400,",
			"  margin: {",
			"    top: 15,",
			"    right: 15,",
			"    bottom: 40,",
			"    left: 60",
			"    }",
			"  };",
			"  ",
			"  dimensions.boundedWidth =",
			"    dimensions.width - dimensions.margin.left - dimensions.margin.right;",
			"  dimensions.boundedHeight =",
			"    dimensions.height - dimensions.margin.top - dimensions.margin.bottom;"
		],
		"description": "Create dimensions"
	},
	"D3JS : wrapper": {
		"prefix": "ccD3_wrapper",
		"body": [
			"  const wrapper = d3",
			"  .select('#wrapper')",
			"  .append('svg')",
			"  .attr('width', dimensions.width)",
			"  .attr('height', dimensions.height);"
		],
		"description": "Create wrapper"
	},
	"D3JS : bounds": {
		"prefix": "ccD3_bounds",
		"body": [
			"  const bounds = wrapper",
			"    .append('g')",
			"    .style(",
			"      'transform',",
			"      `translate(${dimensions.margin.left",
			"      }px,${dimensions.margin.top",
			"      }px)`",
			"    );"
		],
		"description": "Create bounds"
	}
}
