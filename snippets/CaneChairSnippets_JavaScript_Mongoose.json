{
    "Mongoose:Model:AddNewSchema": {
		"prefix": "ccMongoose_Model_NewSchema",
		"body": [
			"${1:__schemaName__} = new Schema({",
			"\t${2:__statement__}",
			"});"
		],
		"description": ""
	},
	"Mongoose:Model:AddNewModel": {
		"prefix": "ccMongoose_Model_NewModel",
		"body": [
			"const mongoose = require('mongoose'),",
			"\tSchema = mongoose.Schema,",
			"\t${1:__ModelName__}Schema = new Schema({",
			"\t\t${2:__property__}",
			"\t});",
			"",
			"mongoose.model('${1:__ModelName__}', ${1:__ModelName__}Schema);"
		],
		"description": ""
	},
	"Mongoose:Model:AddNewProperty": {
		"prefix": "ccMongoose_Model_NewProperty",
		"body": [
			"${1:__propertyname__}: {",
			"\ttype: ${2:__dataType__},",
			"\tdefault: ${3:__defaultValue__}",
			"}"
		],
		"description": ""
	},
	"Mongoose :Model:AddNewProperty:Required": {
		"prefix": "ccMongoose_Model_NewProperty_Required",
		"body": [
			"${1:__propertyName__}: {",
			"\ttype: ${2:__dataType__},",
			"\tdefault: ${3:__defaultValue__}",
			"\tRequired: '${1:__propertyName__} cannot be empty.'",
			"}"
		],
		"description": ""
	},
	"Mongoose:Controller:Function:FindOne": {
		"prefix": "ccMongoose_Controller_Function_FindOne",
		"body": [
			"${1:modelName}.findOne({ ${2:condition} }, function (err, ${3:entityName}) {",
			"\tif (err) {",
			"\t\treturn res.status(500).send('${4:error message}');",
			"\t}",
			"",
			"\tif (!${3:entityName}) {",
			"\t\treturn res.status(404).send('${3:entityName} not found.');",
			"\t}",
			"",
			"\tres.status(200).send({ auth: true, token: token });",
			"});"
		],
		"description": ""
	}
}